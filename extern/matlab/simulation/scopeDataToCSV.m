function [header, csvDat] = scopeDataToCSV(scopeData, outPath)
    csvDat = [scopeData.time];
%     header = ["time"];
    for i = 1:length(scopeData.signals)
        csvDat = [csvDat, scopeData.signals(i).values];
        for i2 = 1:scopeData.signals(i).dimensions
%             header = [header, sprintf("%s.%d", scopeData.signals(i).label, i2)];
        end
    end
    header = ["time", ...
              "u_abs", "w_abs", "q_abs", "theta_abs", "v_abs", "p_abs", "r_abs", "phi_abs", "h_abs", "psi_abs", ...
              "u_rel", "w_rel", "q_rel", "theta_rel", "v_rel", "p_rel", "r_rel", "phi_rel", "h_rel", "psi_rel", ...
              "u_dot", "w_dot", "q_dot", "theta_dot", "v_dot", "p_dot", "r_dot", "phi_dot", "h_dot", "psi_dot", ...
              "u_next", "w_next", "q_next", "theta_next", "v_next", "p_next", "r_next", "phi_next", "h_next", ...
              "phi_idx", ...
              "theta_idx", ...
              "u_0", "w_0", "q_0", "theta_0", "v_0", "p_0", "r_0", "phi_0", "h_0", "psi_0", ...
              "delta_e_0", "delta_T_0", "delta_a_0", "delta_r_0", ...
              "delta_e_abs", "delta_T_abs", "delta_a_abs", "delta_r_abs", ...
              "delta_e_rel", "delta_T_rel", "delta_a_rel", "delta_r_rel", ...
              "safety_ctrl", ...
              "safety_phi_idx", ...
              "safety_theta_idx", ...
              "h_c", "psi_c", "u_c", "theta_c", "v_c", "phi_c"
              ];
    if nargin >= 2
        fid = fopen(outPath,'w'); 
        fprintf(fid,'%s,',header);
        fprintf(fid,'\n');
        fclose(fid);
        %write data to end of file
        dlmwrite(outPath,csvDat,'-append');
    end
end